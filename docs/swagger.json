{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/limits": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new limit or update existing limit for a specific user and tenor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "limits"
                ],
                "summary": "Create or update limit for user",
                "parameters": [
                    {
                        "description": "Limit Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateLimitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/limits/{user_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "limits"
                ],
                "summary": "Get user limits",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login to get JWT token",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get all transactions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new transaction and deduct user limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Create a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tenor",
                        "name": "tenor",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Transaction Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get list of users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user with input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.APIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateLimitRequest": {
            "type": "object",
            "required": [
                "limit_amount",
                "tenor_months",
                "user_id"
            ],
            "properties": {
                "limit_amount": {
                    "type": "number"
                },
                "tenor_months": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateTransactionRequest": {
            "type": "object",
            "required": [
                "admin_fee",
                "asset_name",
                "contract_number",
                "installment_amount",
                "interest_amount",
                "otr",
                "user_id"
            ],
            "properties": {
                "admin_fee": {
                    "type": "number"
                },
                "asset_name": {
                    "type": "string"
                },
                "contract_number": {
                    "type": "string"
                },
                "installment_amount": {
                    "type": "number"
                },
                "interest_amount": {
                    "type": "number"
                },
                "otr": {
                    "type": "number"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateUserRequest": {
            "type": "object",
            "required": [
                "birth_date",
                "birth_place",
                "full_name",
                "legal_name",
                "nik",
                "salary"
            ],
            "properties": {
                "birth_date": {
                    "description": "Date format",
                    "type": "string"
                },
                "birth_place": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "legal_name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "photo_id_card": {
                    "type": "string"
                },
                "photo_selfie": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                }
            }
        },
        "handler.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "helper.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}